{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{103:function(e,t,a){\"use strict\";a.d(t,\"a\",(function(){return b})),a.d(t,\"b\",(function(){return u}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),a=t;return e&&(a=\"function\"==typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:\"code\",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),b=p(a),m=n,u=b[\"\".concat(s,\".\").concat(m)]||b[m]||d[m]||i;return a?r.a.createElement(u,o(o({ref:t},l),{},{components:a})):r.a.createElement(u,o({ref:t},l))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if(\"string\"==typeof e||n){var i=a.length,s=new Array(i);s[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType=\"string\"==typeof e?e:n,s[1]=o;for(var l=2;l<i;l++)s[l]=a[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}m.displayName=\"MDXCreateElement\"},78:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return s})),a.d(t,\"metadata\",(function(){return o})),a.d(t,\"rightToc\",(function(){return c})),a.d(t,\"default\",(function(){return p}));var n=a(3),r=a(7),i=(a(0),a(103)),s={id:\"get_started\",title:\"Get started\",slug:\"/get_started\"},o={unversionedId:\"get_started\",id:\"get_started\",isDocsHomePage:!1,title:\"Get started\",description:\"The data for this guide is in the example directory in the repo. Quick overview of the program is given in the Introduction. The installation process in described here\",source:\"@site/docs/get_started.md\",slug:\"/get_started\",permalink:\"/rRNADif/docs/get_started\",editUrl:\"https://github.com/pavlohrab/rRNADif-docs/docs/get_started.md\",version:\"current\",sidebar:\"someSidebar\",previous:{title:\"Installation and Prerequisites\",permalink:\"/rRNADif/docs/installation\"},next:{title:\"Understand the output\",permalink:\"/rRNADif/docs/output\"}},c=[{value:\"Step 0. Prepare a database\",id:\"step-0-prepare-a-database\",children:[]},{value:\"Step 1. Prepare input files\",id:\"step-1-prepare-input-files\",children:[]},{value:\"Step 2. Run the script with minimal tweaks\",id:\"step-2-run-the-script-with-minimal-tweaks\",children:[]},{value:\"Step 3. Compute phylogeny\",id:\"step-3-compute-phylogeny\",children:[]},{value:\"Step 4. Get the results\",id:\"step-4-get-the-results\",children:[]}],l={rightToc:c};function p(e){var t=e.components,a=Object(r.a)(e,[\"components\"]);return Object(i.b)(\"wrapper\",Object(n.a)({},l,a,{components:t,mdxType:\"MDXLayout\"}),Object(i.b)(\"p\",null,\"The data for this guide is in the \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"example\"),\" directory in the repo. Quick overview of the program is given in the \",Object(i.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/rRNADif/docs/\"}),\"Introduction\"),\". The installation process in described \",Object(i.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/rRNADif/docs/installation\"}),\"here\"),\"  \"),Object(i.b)(\"h2\",{id:\"step-0-prepare-a-database\"},\"Step 0. Prepare a database\"),Object(i.b)(\"p\",null,\"The first step after cloning the repo (with \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"wget <repo-link>\"),\") is to go to the rRNADif/datasets/computed folder and to \",Object(i.b)(\"strong\",{parentName:\"p\"},\"extract the archive in the same folder\"),\". The archive holds a folder with all fasta files with precomputed 16S rRNA and a csv with precomputed mean/median branch length between those sequences.\"),Object(i.b)(\"h2\",{id:\"step-1-prepare-input-files\"},\"Step 1. Prepare input files\"),Object(i.b)(\"p\",null,\"The inputs are:\"),Object(i.b)(\"ol\",null,Object(i.b)(\"li\",{parentName:\"ol\"},'A csv file, downloaded from a \"Browse by organism\" tab in NCBI Genome database. This csv file holds genomes to filter from precomputed database. '),Object(i.b)(\"li\",{parentName:\"ol\"},\"Genome sequence in fasta format.\")),Object(i.b)(\"p\",null,\"The optional input is a set of 16S rRNAs (with provided \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"--step 2\"),\" flag in a script. See \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"sh rrnadif -h\"),\" for  more help). Then the \",Object(i.b)(\"strong\",{parentName:\"p\"},\"barrnap step will be omitted\"),\". More about inputs can be read \",Object(i.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/rRNADif/docs/add\"}),\"here\"),\". \"),Object(i.b)(\"h2\",{id:\"step-2-run-the-script-with-minimal-tweaks\"},\"Step 2. Run the script with minimal tweaks\"),Object(i.b)(\"p\",null,\"To run a script with provided genome sequence and csv file you can enter:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name>\\n\")),Object(i.b)(\"p\",null,\"The project name will affect the result folder name. The results then will be printed into terminal.\"),Object(i.b)(\"div\",{className:\"admonition admonition-caution alert alert--warning\"},Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(i.b)(\"h5\",{parentName:\"div\"},Object(i.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(i.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",viewBox:\"0 0 16 16\"}),Object(i.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"})))),\"caution\")),Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(i.b)(\"p\",{parentName:\"div\"},\"rRNADif was only tested when run under the repo directory. Please try to navigate and run the \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"sh rrnadif.sh\"),\" from  repo directory to avoid any errors (:\"))),Object(i.b)(\"p\",null,\"To run rRNADif with the same project name, \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"--redo\"),\" flag should be used!\"),Object(i.b)(\"h2\",{id:\"step-3-compute-phylogeny\"},\"Step 3. Compute phylogeny\"),Object(i.b)(\"p\",null,\"The phylogenetic tree can be computed as such\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree\\n\")),Object(i.b)(\"div\",{className:\"admonition admonition-note alert alert--secondary\"},Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(i.b)(\"h5\",{parentName:\"div\"},Object(i.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(i.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"14\",height:\"16\",viewBox:\"0 0 14 16\"}),Object(i.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(i.b)(\"p\",{parentName:\"div\"},\"Default programs for phylogenetic tree computation are mafft and fasttree. They should be installed and be accessible from a terminal.\"))),Object(i.b)(\"p\",null,\"The rRNADif will compute the tree from all strains/genomes. used in the analysis.\\nAlso the script is capable of computing only species phylogenetic tree, discarding all the strains:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree --only_species\\n\")),Object(i.b)(\"div\",{className:\"admonition admonition-note alert alert--secondary\"},Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(i.b)(\"h5\",{parentName:\"div\"},Object(i.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(i.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"14\",height:\"16\",viewBox:\"0 0 14 16\"}),Object(i.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(i.b)(\"p\",{parentName:\"div\"},\"Variability comparison will be done on whole set of sequences. They only be discarded for final tree computation. \"))),Object(i.b)(\"div\",{className:\"admonition admonition-tip alert alert--success\"},Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(i.b)(\"h5\",{parentName:\"div\"},Object(i.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(i.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"12\",height:\"16\",viewBox:\"0 0 12 16\"}),Object(i.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"})))),\"tip\")),Object(i.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(i.b)(\"p\",{parentName:\"div\"},\"You can choose the tree computation algorithms via \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"-m\"),\" and \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"-t\"),\" flags. The chosen algorithm can be used for whole analysis, or only for final tree computation (\",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"--only_phylo \"),\" flag). More parameters see at \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"sh rrnadif.sh -h\")))),Object(i.b)(\"h2\",{id:\"step-4-get-the-results\"},\"Step 4. Get the results\"),Object(i.b)(\"p\",null,\"The results of an analysis are under \",Object(i.b)(\"em\",{parentName:\"p\"},\"project-name\"),Object(i.b)(\"em\",{parentName:\"p\"},\"results folder in the rRNADif directory. \",Object(i.b)(\"strong\",{parentName:\"em\"},'The result files are in the \"results\" directory'),\", named Results\"),\"...csv. \"),Object(i.b)(\"ul\",null,Object(i.b)(\"li\",{parentName:\"ul\"},\"Results_all.csv contains the main result info. Each row represents every used genome. There are three columns - name (strain name), mean (mean branch length value for 16S sequences for this strain), median (median values - same logic as for mean). The values for analysed sequences are included as well.\"),Object(i.b)(\"li\",{parentName:\"ul\"},\"Results_mean_outliers.csv - contains genomes, which mean value was an outlier within analysed dataset. Structure is the same as in Results_all.csv\"),Object(i.b)(\"li\",{parentName:\"ul\"},\"Results_median_outliers.csv - contains genomes, which median values are an outliers within analysed dataset. \",Object(i.b)(\"strong\",{parentName:\"li\"},\"Can be identical to Results_mean_outliers.csv.\"),\" Structure is the same as in Results_all.csv\"),Object(i.b)(\"li\",{parentName:\"ul\"},\"Results_no_outliers.csv - contains genomes, which values are not within outliers. Structure is the same as in Results_all.csv.\")),Object(i.b)(\"p\",null,'The tree results are in \"phylogeny\" folder. The folder itself contains 3 files:'),Object(i.b)(\"ol\",null,Object(i.b)(\"li\",{parentName:\"ol\"},\"FINAL.fasta - the sequences used in phylogeny computation in fasta format.\"),Object(i.b)(\"li\",{parentName:\"ol\"},\"FINAL.mafft - the MSA with the chosen algorithm in fasta format. The extension will not change with change of MSA program - used for script stability.\"),Object(i.b)(\"li\",{parentName:\"ol\"},\"FINAL.nwk - the phylogenetic tree in newick format.\")),Object(i.b)(\"p\",null,\"For more extensive results description see \",Object(i.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/rRNADif/docs/output\"}),\"this\"),\" tutorial\"))}p.isMDXComponent=!0}}]);","name":"5d975e13.da303675.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[12],{\n\n/***/ 103:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 78:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rightToc\", function() { return rightToc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(103);\nvar frontMatter={id:'get_started',title:'Get started',slug:'/get_started'};var metadata={\"unversionedId\":\"get_started\",\"id\":\"get_started\",\"isDocsHomePage\":false,\"title\":\"Get started\",\"description\":\"The data for this guide is in the example directory in the repo. Quick overview of the program is given in the Introduction. The installation process in described here\",\"source\":\"@site/docs/get_started.md\",\"slug\":\"/get_started\",\"permalink\":\"/rRNADif/docs/get_started\",\"editUrl\":\"https://github.com/pavlohrab/rRNADif-docs/docs/get_started.md\",\"version\":\"current\",\"sidebar\":\"someSidebar\",\"previous\":{\"title\":\"Installation and Prerequisites\",\"permalink\":\"/rRNADif/docs/installation\"},\"next\":{\"title\":\"Understand the output\",\"permalink\":\"/rRNADif/docs/output\"}};/* @jsxRuntime classic */ /* @jsx mdx */var rightToc=[{value:'Step 0. Prepare a database',id:'step-0-prepare-a-database',children:[]},{value:'Step 1. Prepare input files',id:'step-1-prepare-input-files',children:[]},{value:'Step 2. Run the script with minimal tweaks',id:'step-2-run-the-script-with-minimal-tweaks',children:[]},{value:'Step 3. Compute phylogeny',id:'step-3-compute-phylogeny',children:[]},{value:'Step 4. Get the results',id:'step-4-get-the-results',children:[]}];var layoutProps={rightToc:rightToc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The data for this guide is in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"example\"),\" directory in the repo. Quick overview of the program is given in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/rRNADif/docs/\"}),\"Introduction\"),\". The installation process in described \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/rRNADif/docs/installation\"}),\"here\"),\"  \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"step-0-prepare-a-database\"},\"Step 0. Prepare a database\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The first step after cloning the repo (with \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"wget <repo-link>\"),\") is to go to the rRNADif/datasets/computed folder and to \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"extract the archive in the same folder\"),\". The archive holds a folder with all fasta files with precomputed 16S rRNA and a csv with precomputed mean/median branch length between those sequences.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"step-1-prepare-input-files\"},\"Step 1. Prepare input files\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The inputs are:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"A csv file, downloaded from a \\\"Browse by organism\\\" tab in NCBI Genome database. This csv file holds genomes to filter from precomputed database. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"Genome sequence in fasta format.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The optional input is a set of 16S rRNAs (with provided \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--step 2\"),\" flag in a script. See \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"sh rrnadif -h\"),\" for  more help). Then the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"barrnap step will be omitted\"),\". More about inputs can be read \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/rRNADif/docs/add\"}),\"here\"),\". \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"step-2-run-the-script-with-minimal-tweaks\"},\"Step 2. Run the script with minimal tweaks\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To run a script with provided genome sequence and csv file you can enter:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name>\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The project name will affect the result folder name. The results then will be printed into terminal.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-caution alert alert--warning\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"})))),\"caution\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"rRNADif was only tested when run under the repo directory. Please try to navigate and run the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"sh rrnadif.sh\"),\" from  repo directory to avoid any errors (:\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To run rRNADif with the same project name, \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--redo\"),\" flag should be used!\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"step-3-compute-phylogeny\"},\"Step 3. Compute phylogeny\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The phylogenetic tree can be computed as such\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-note alert alert--secondary\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"14\",\"height\":\"16\",\"viewBox\":\"0 0 14 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"Default programs for phylogenetic tree computation are mafft and fasttree. They should be installed and be accessible from a terminal.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The rRNADif will compute the tree from all strains/genomes. used in the analysis.\\nAlso the script is capable of computing only species phylogenetic tree, discarding all the strains:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree --only_species\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-note alert alert--secondary\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"14\",\"height\":\"16\",\"viewBox\":\"0 0 14 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"Variability comparison will be done on whole set of sequences. They only be discarded for final tree computation. \"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-tip alert alert--success\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"12\",\"height\":\"16\",\"viewBox\":\"0 0 12 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"})))),\"tip\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"You can choose the tree computation algorithms via \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"-m\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"-t\"),\" flags. The chosen algorithm can be used for whole analysis, or only for final tree computation (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--only_phylo \"),\" flag). More parameters see at \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"sh rrnadif.sh -h\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"step-4-get-the-results\"},\"Step 4. Get the results\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The results of an analysis are under \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"p\"},\"project-name\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"p\"},\"results folder in the rRNADif directory. \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"em\"},\"The result files are in the \\\"results\\\" directory\"),\", named Results\"),\"...csv. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Results_all.csv contains the main result info. Each row represents every used genome. There are three columns - name (strain name), mean (mean branch length value for 16S sequences for this strain), median (median values - same logic as for mean). The values for analysed sequences are included as well.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Results_mean_outliers.csv - contains genomes, which mean value was an outlier within analysed dataset. Structure is the same as in Results_all.csv\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Results_median_outliers.csv - contains genomes, which median values are an outliers within analysed dataset. \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},\"Can be identical to Results_mean_outliers.csv.\"),\" Structure is the same as in Results_all.csv\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Results_no_outliers.csv - contains genomes, which values are not within outliers. Structure is the same as in Results_all.csv.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The tree results are in \\\"phylogeny\\\" folder. The folder itself contains 3 files:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"FINAL.fasta - the sequences used in phylogeny computation in fasta format.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"FINAL.mafft - the MSA with the chosen algorithm in fasta format. The extension will not change with change of MSA program - used for script stability.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"FINAL.nwk - the phylogenetic tree in newick format.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"For more extensive results description see \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/rRNADif/docs/output\"}),\"this\"),\" tutorial\"));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}