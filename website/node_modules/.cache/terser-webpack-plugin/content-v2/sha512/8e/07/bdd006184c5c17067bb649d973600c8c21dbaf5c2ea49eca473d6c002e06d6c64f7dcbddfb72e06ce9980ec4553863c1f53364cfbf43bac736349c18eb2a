{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{103:function(e,t,a){\"use strict\";a.d(t,\"a\",(function(){return d})),a.d(t,\"b\",(function(){return u}));var n=a(0),i=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),p=function(e){var t=i.a.useContext(s),a=t;return e&&(a=\"function\"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=p(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:\"code\",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,r=e.parentName,s=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),d=p(a),m=n,u=d[\"\".concat(r,\".\").concat(m)]||d[m]||b[m]||o;return a?i.a.createElement(u,c(c({ref:t},s),{},{components:a})):i.a.createElement(u,c({ref:t},s))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if(\"string\"==typeof e||n){var o=a.length,r=new Array(o);r[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType=\"string\"==typeof e?e:n,r[1]=c;for(var s=2;s<o;s++)r[s]=a[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}m.displayName=\"MDXCreateElement\"},149:function(e,t,a){\"use strict\";a.r(t),t.default=a.p+\"assets/images/plot-94a80a7cf194856902842b57a19d6b1f.png\"},69:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return r})),a.d(t,\"metadata\",(function(){return c})),a.d(t,\"rightToc\",(function(){return l})),a.d(t,\"default\",(function(){return p}));var n=a(3),i=a(7),o=(a(0),a(103)),r={id:\"output2\",title:\"Create plots and phylogenetic tree\"},c={unversionedId:\"output2\",id:\"output2\",isDocsHomePage:!1,title:\"Create plots and phylogenetic tree\",description:\"Compute density plot\",source:\"@site/docs/output2.md\",slug:\"/output2\",permalink:\"/rRNADif/docs/output2\",editUrl:\"https://github.com/pavlohrab/rRNADif-docs/docs/output2.md\",version:\"current\",sidebar:\"someSidebar\",previous:{title:\"Understand the output\",permalink:\"/rRNADif/docs/output\"},next:{title:\"Non-standard inputs\",permalink:\"/rRNADif/docs/add\"}},l=[{value:\"Compute density plot\",id:\"compute-density-plot\",children:[]},{value:\"Compute final phylogenetic tree\",id:\"compute-final-phylogenetic-tree\",children:[]}],s={rightToc:l};function p(e){var t=e.components,r=Object(i.a)(e,[\"components\"]);return Object(o.b)(\"wrapper\",Object(n.a)({},s,r,{components:t,mdxType:\"MDXLayout\"}),Object(o.b)(\"h2\",{id:\"compute-density-plot\"},\"Compute density plot\"),Object(o.b)(\"p\",null,\"One of analysis options is a density plot of analyzed database subset values. \",Object(o.b)(\"strong\",{parentName:\"p\"},\"The plot is drawn for non-outliers only.\"),\"  Example:\\n\",Object(o.b)(\"img\",{alt:\"plot\",src:a(149).default})),Object(o.b)(\"p\",null,\"Just use the \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--plot\"),\" flag with no options. (Boolean one)\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --plot\\n\")),Object(o.b)(\"div\",{className:\"admonition admonition-note alert alert--secondary\"},Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(o.b)(\"h5\",{parentName:\"div\"},Object(o.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(o.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"14\",height:\"16\",viewBox:\"0 0 14 16\"}),Object(o.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(o.b)(\"p\",{parentName:\"div\"},\"You should install r packages in the environment you are running rRNADif from to draw the plot. Please refer to the \",Object(o.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/rRNADif/docs/installation\"}),\"installation\"),\" guide for more details.\"))),Object(o.b)(\"h2\",{id:\"compute-final-phylogenetic-tree\"},\"Compute final phylogenetic tree\"),Object(o.b)(\"p\",null,\"The main advantage of rRNADif is fast and flexible computation of 16S rRNA based species phylogenetic trees from the comprehensive database. Therefore, no misclassified and/or partly sequenced 16S are included, leading to better species/genus-level classification of genomes based on their rRNAs. As was stated in \",Object(o.b)(\"a\",Object(n.a)({parentName:\"p\"},{href:\"/rRNADif/docs/get_started\"}),\"get started guide\"),\", final phylogenetic tree can be computed with \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--tree\"),\" flag.\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree\\n\")),Object(o.b)(\"div\",{className:\"admonition admonition-note alert alert--secondary\"},Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(o.b)(\"h5\",{parentName:\"div\"},Object(o.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(o.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"14\",height:\"16\",viewBox:\"0 0 14 16\"}),Object(o.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(o.b)(\"p\",{parentName:\"div\"},\"The defaults are mafft and fasttree. Also, all sequences are used for outliers and 1 sequence (genome-representative) for non-outlier for giver subset of the database.\"))),Object(o.b)(\"p\",null,\"However, the algorithm for Multiple Sequence alignment or program for phylogeny can be changed with \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"-m\"),\" and \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"-t\"),\" flags respectively. For now, rRNADif supports clustalo, muscle and mafft for MSA, and fasttree, iqtree and raxml for phylogeny. \"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree -m muscle -t iqtree\\n\")),Object(o.b)(\"div\",{className:\"admonition admonition-caution alert alert--warning\"},Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(o.b)(\"h5\",{parentName:\"div\"},Object(o.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(o.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",viewBox:\"0 0 16 16\"}),Object(o.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"})))),\"caution\")),Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(o.b)(\"p\",{parentName:\"div\"},\"By default, branch length for annotated 16S in the input genome will also be computed using provided options, not default ones. Hence, the provided pre-computed database is generated with mafft and fasttree, we suggest to use \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--only_phylo\"),\" flag. Therefore, only the final tree will be computed with desired algorithms.   \"))),Object(o.b)(\"p\",null,\"The computed phylogenetic tree will contain every strain and therefore can be simply unreadable. To use only species information and compute species-level phylogenetic tree use \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--only_species\"),\" flag.\"),Object(o.b)(\"p\",null,\"In the example below, default options will be used to measure intragenomic variability (construct individual phylogenetic tree) (\",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--only_phylo\"),\" flag), the muscle for MSA and iqtree for phylogeny (\",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"-m\"),\" and \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"-t\"),\" flags) will be used for final phylogenetic tree computation. The data for the final phylogenetic tree will contain only species (\",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--only species\"),\"). This would drastically reduce tree size and respective computation time for it, also making tree human readable. \"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",Object(n.a)({parentName:\"pre\"},{className:\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree -m muscle -t iqtree --only_species --only_phylo\\n\")),Object(o.b)(\"div\",{className:\"admonition admonition-note alert alert--secondary\"},Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(o.b)(\"h5\",{parentName:\"div\"},Object(o.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(o.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"14\",height:\"16\",viewBox:\"0 0 14 16\"}),Object(o.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(o.b)(\"p\",{parentName:\"div\"},\"Species, when using \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--only_species\"),\" flag, will be chosen randomly from the database subset (if multiple strains are available). By default, the first in alphabetical order is kept. Prioritized are genomes with multiple rrnas which are non-outliers.\"))),Object(o.b)(\"div\",{className:\"admonition admonition-warning alert alert--danger\"},Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(o.b)(\"h5\",{parentName:\"div\"},Object(o.b)(\"span\",Object(n.a)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(o.b)(\"svg\",Object(n.a)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"12\",height:\"16\",viewBox:\"0 0 12 16\"}),Object(o.b)(\"path\",Object(n.a)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"})))),\"warning\")),Object(o.b)(\"div\",Object(n.a)({parentName:\"div\"},{className:\"admonition-content\"}),Object(o.b)(\"p\",{parentName:\"div\"},\"If \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"--only_species\"),\" flag is used, intragenomic variability of input 16S will be compared to the whole subset. Strains, that are the same species will be dropped only for the final tree computation.\"))),Object(o.b)(\"p\",null,\"The output of a run is organized under \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"<project-name>_results/results/phylogeny\"),\" directory. Three files should be there:\"),Object(o.b)(\"ol\",null,Object(o.b)(\"li\",{parentName:\"ol\"},\"FINAL.fasta - sequences used for constructing of a phylogenetic tree\"),Object(o.b)(\"li\",{parentName:\"ol\"},\"FINAL.mafft - MSA in fasta format. The extension .mafft is used for the sake of consistency in outputs from different MSA programs. This is \",Object(o.b)(\"strong\",{parentName:\"li\"},\"NOT\"),\" an indicator of the used algorithm.\"),Object(o.b)(\"li\",{parentName:\"ol\"},\"FINAL.nwk - phylogenetic tree in newick format. Ready to view in almost every phylogenetic tree viewer.\")))}p.isMDXComponent=!0}}]);","name":"11406d8f.a56c4f46.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[6],{\n\n/***/ 103:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 149:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"assets/images/plot-94a80a7cf194856902842b57a19d6b1f.png\");\n\n/***/ }),\n\n/***/ 69:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rightToc\", function() { return rightToc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(103);\nvar frontMatter={id:'output2',title:'Create plots and phylogenetic tree'};var metadata={\"unversionedId\":\"output2\",\"id\":\"output2\",\"isDocsHomePage\":false,\"title\":\"Create plots and phylogenetic tree\",\"description\":\"Compute density plot\",\"source\":\"@site/docs/output2.md\",\"slug\":\"/output2\",\"permalink\":\"/rRNADif/docs/output2\",\"editUrl\":\"https://github.com/pavlohrab/rRNADif-docs/docs/output2.md\",\"version\":\"current\",\"sidebar\":\"someSidebar\",\"previous\":{\"title\":\"Understand the output\",\"permalink\":\"/rRNADif/docs/output\"},\"next\":{\"title\":\"Non-standard inputs\",\"permalink\":\"/rRNADif/docs/add\"}};/* @jsxRuntime classic */ /* @jsx mdx */var rightToc=[{value:'Compute density plot',id:'compute-density-plot',children:[]},{value:'Compute final phylogenetic tree',id:'compute-final-phylogenetic-tree',children:[]}];var layoutProps={rightToc:rightToc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"compute-density-plot\"},\"Compute density plot\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"One of analysis options is a density plot of analyzed database subset values. \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},\"The plot is drawn for non-outliers only.\"),\"  Example:\\n\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"img\",{alt:\"plot\",src:__webpack_require__(149).default})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Just use the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--plot\"),\" flag with no options. (Boolean one)\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --plot\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-note alert alert--secondary\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"14\",\"height\":\"16\",\"viewBox\":\"0 0 14 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"You should install r packages in the environment you are running rRNADif from to draw the plot. Please refer to the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/rRNADif/docs/installation\"}),\"installation\"),\" guide for more details.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"compute-final-phylogenetic-tree\"},\"Compute final phylogenetic tree\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The main advantage of rRNADif is fast and flexible computation of 16S rRNA based species phylogenetic trees from the comprehensive database. Therefore, no misclassified and/or partly sequenced 16S are included, leading to better species/genus-level classification of genomes based on their rRNAs. As was stated in \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"p\"},{\"href\":\"/rRNADif/docs/get_started\"}),\"get started guide\"),\", final phylogenetic tree can be computed with \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--tree\"),\" flag.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-note alert alert--secondary\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"14\",\"height\":\"16\",\"viewBox\":\"0 0 14 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"The defaults are mafft and fasttree. Also, all sequences are used for outliers and 1 sequence (genome-representative) for non-outlier for giver subset of the database.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"However, the algorithm for Multiple Sequence alignment or program for phylogeny can be changed with \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"-m\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"-t\"),\" flags respectively. For now, rRNADif supports clustalo, muscle and mafft for MSA, and fasttree, iqtree and raxml for phylogeny. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree -m muscle -t iqtree\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-caution alert alert--warning\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"16\",\"height\":\"16\",\"viewBox\":\"0 0 16 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"})))),\"caution\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"By default, branch length for annotated 16S in the input genome will also be computed using provided options, not default ones. Hence, the provided pre-computed database is generated with mafft and fasttree, we suggest to use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--only_phylo\"),\" flag. Therefore, only the final tree will be computed with desired algorithms.   \"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The computed phylogenetic tree will contain every strain and therefore can be simply unreadable. To use only species information and compute species-level phylogenetic tree use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--only_species\"),\" flag.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In the example below, default options will be used to measure intragenomic variability (construct individual phylogenetic tree) (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--only_phylo\"),\" flag), the muscle for MSA and iqtree for phylogeny (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"-m\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"-t\"),\" flags) will be used for final phylogenetic tree computation. The data for the final phylogenetic tree will contain only species (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--only species\"),\"). This would drastically reduce tree size and respective computation time for it, also making tree human readable. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"pre\"},{\"className\":\"language-bash\"}),\"sh rrnadif -d <csv.file> -i <genome.fasta> -p <project-name> --tree -m muscle -t iqtree --only_species --only_phylo\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-note alert alert--secondary\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"14\",\"height\":\"16\",\"viewBox\":\"0 0 14 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z\"})))),\"note\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"Species, when using \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--only_species\"),\" flag, will be chosen randomly from the database subset (if multiple strains are available). By default, the first in alphabetical order is kept. Prioritized are genomes with multiple rrnas which are non-outliers.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{\"className\":\"admonition admonition-warning alert alert--danger\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"span\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"svg\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"12\",\"height\":\"16\",\"viewBox\":\"0 0 12 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"path\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"})))),\"warning\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",Object(_run_media_pavloh_DATA_BANK_WORK_rRNADif_docs_website_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"div\"},\"If \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"--only_species\"),\" flag is used, intragenomic variability of input 16S will be compared to the whole subset. Strains, that are the same species will be dropped only for the final tree computation.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The output of a run is organized under \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"<project-name>_results/results/phylogeny\"),\" directory. Three files should be there:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"FINAL.fasta - sequences used for constructing of a phylogenetic tree\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"FINAL.mafft - MSA in fasta format. The extension .mafft is used for the sake of consistency in outputs from different MSA programs. This is \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},\"NOT\"),\" an indicator of the used algorithm.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"FINAL.nwk - phylogenetic tree in newick format. Ready to view in almost every phylogenetic tree viewer.\")));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}